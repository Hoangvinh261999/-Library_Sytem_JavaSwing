/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mylibsys.libsystem.ui;

import com.mylibsys.libsystem.dao.DangKiNDDAO;
import com.mylibsys.libsystem.entity.NguoiDung;
import com.mylibsys.libsystem.entity.User;
import com.mylibsys.libsystem.utils.DateTimeRanDomID;
import java.awt.event.ActionEvent;
import java.util.Random;
import javax.swing.JOptionPane;
import java.util.Properties;
import javax.mail.*;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.Timer;

/**
 *
 * @author kuteb
 */
public class dangKiNdUi extends javax.swing.JPanel {

    private int randomNumber;
    private Timer timer;
    private int remainingSeconds;
    DangKiNDDAO dkDAO = new DangKiNDDAO();
    private Thread numberThread;
    private boolean isRunning = false;

    /**
     * Creates new form dangKiNdUi
     */
    public dangKiNdUi() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtUser = new javax.swing.JTextField();
        btnReset = new javax.swing.JButton();
        btnDangKi = new javax.swing.JButton();
        txtHoTen = new javax.swing.JTextField();
        txtSDT = new javax.swing.JTextField();
        txtDiaChi = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtMaXacNhan = new javax.swing.JTextField();
        btnGuiMa = new javax.swing.JButton();
        txtThoiGian = new javax.swing.JLabel();
        txtPass = new javax.swing.JPasswordField();

        jPanel1.setBackground(new java.awt.Color(0, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Đăng Kí TK Người Dùng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 18))); // NOI18N
        jPanel1.setMaximumSize(new java.awt.Dimension(850, 550));
        jPanel1.setMinimumSize(new java.awt.Dimension(850, 550));
        jPanel1.setPreferredSize(new java.awt.Dimension(850, 550));
        jPanel1.setRequestFocusEnabled(false);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("Họ Tên :");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("SDT :");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setText("Địa Chỉ :");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setText("Email :");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel9.setText("Password :");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel10.setText("Username :");

        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnDangKi.setText("Đăng Ký");
        btnDangKi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDangKiActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(0, 204, 204));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("Mã xác nhận");

        btnGuiMa.setText("Gửi mã");
        btnGuiMa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuiMaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(txtMaXacNhan, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btnGuiMa)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtMaXacNhan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGuiMa))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        txtThoiGian.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtThoiGian.setForeground(new java.awt.Color(255, 0, 51));
        txtThoiGian.setText("Mã xác nhận có hiệu lực trong 30s");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(178, 178, 178)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(287, 287, 287)
                        .addComponent(txtThoiGian)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(48, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addGap(23, 23, 23))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtUser)
                                            .addComponent(txtEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addComponent(txtPass, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(88, 88, 88)
                        .addComponent(btnDangKi, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(295, 295, 295))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtHoTen, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(txtSDT)
                            .addComponent(txtDiaChi))
                        .addGap(213, 213, 213))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(128, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(txtPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtThoiGian)
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDangKi, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(93, 93, 93))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 12, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        reset();
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnDangKiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDangKiActionPerformed
        // TODO add your handling code here:
        if (validateForm()) {
//            if (dkDAO.findbyMaTK(txtMaTk.getText()) != null ) {
//                JOptionPane.showMessageDialog(this, "Ma tai khoan da ton tai!");
//                return;
//            }
            if (dkDAO.findbyUserName(txtUser.getText()) != null) {
                JOptionPane.showMessageDialog(this, "Ma nguoi dung da ton tai!");
                return;
            }
            
            if (dkDAO.findbyEmail(txtEmail.getText()) != null) {
                JOptionPane.showMessageDialog(this, "Email nguoi dung da ton tai!");
                return;
            }

            try {
                DateTimeRanDomID dt = new DateTimeRanDomID();
                dt.generateUniqueRandomCode();
                String maND = "ND" + dt.generateUniqueRandomCode();
                String maTK = "TK" + dt.generateUniqueRandomCode();
                User us = getModelTK(maTK);
                NguoiDung nd = getModelND(maND, maTK);
                if (dkDAO.addTK(us) > 0 && dkDAO.addND(nd) > 0) {
                    JOptionPane.showMessageDialog(this, "Đăng kí thành công!");
//                     btnGuiMa.setEnabled(true);
                    remainingSeconds = -1;

                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnDangKiActionPerformed

    private void btnGuiMaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuiMaActionPerformed
        // TODO add your handling code here:
        if (validateMaXN()) {
            if (numberThread != null && isRunning == true) {
                numberThread.interrupt();
                isRunning = false;
            }
            if (!isRunning) {
                startNumberThread();
                startCountDown();
                GuiMail();
            }
        }
    }//GEN-LAST:event_btnGuiMaActionPerformed

//mycode
    public void reset() {

        txtUser.setText("");
        txtPass.setText("");
        txtEmail.setText("");

        txtHoTen.setText("");
        txtSDT.setText("");
        txtDiaChi.setText("");
        txtMaXacNhan.setText("");
    }

    public NguoiDung getModelND(String maND, String maTK) {

        NguoiDung nd = new NguoiDung();
        nd.setMaND(maND);
        nd.setTenND(txtHoTen.getText());
        nd.setSdt(txtSDT.getText());
        nd.setEmail(txtEmail.getText());
        nd.setDiaChi(txtDiaChi.getText());
        nd.setMaTK(maTK);
        return nd;
    }

    public User getModelTK(String maTK) {

        User us = new User();
        us.setMaTk(maTK);
        char[] passwordChars = txtPass.getPassword();
        String password = new String(passwordChars);
        us.setPassword(password);
        us.setUsername(txtUser.getText());
        return us;
    }

//    private void RandomNumber() {
//        Random random = new Random();
//
//        while (true) {
//            // Tạo số ngẫu nhiên từ 1 đến 100 (bạn có thể thay đổi khoảng số tùy ý)
//            randomNumber = random.nextInt(900000) + 100000;
//            System.out.println("Số ngẫu nhiên: " + randomNumber);
//
//            // Ngủ trong 1 phút (1 * 60 * 1000 milliseconds) trước khi tạo số tiếp theo
//            try {
//                Thread.sleep(1 * 30 * 1000);
//                
//                
//            } catch (InterruptedException e) {
//                Thread.interrupt();
//                System.out.println("Loi" + e.toString());
//            }
//        }
//
//
//
//    }
    private void startNumberThread() {
        numberThread = new Thread(() -> {
            Random random = new Random();
            while (!Thread.interrupted()) {
                randomNumber = random.nextInt(900000) + 100000;
                System.out.println("Số ngẫu nhiên: " + randomNumber);

                try {
                    Thread.sleep(30000); // Sleep for 1 minute
                } catch (InterruptedException e) {
                    Thread.currentThread().interrupt();
                    return;
                }
            }
        });
        numberThread.start();
        isRunning = true;
    }

//    private void stopNumberThread() {
//        if (numberThread != null) {
//            numberThread.interrupt();
//            isRunning = false;
//        }
//    }

    public void GuiMail() {
        try {
            Properties p = new Properties();
            p.put("mail.smtp.auth", "true");
            p.put("mail.smtp.starttls.enable", "true");
            p.put("mail.smtp.host", "smtp.gmail.com");
            p.put("mail.smtp.port", 587);

            String accountName = "dhuyclone2001@gmail.com";
            String accountPassword = "xolqvydetnilxcxy";
            Session s = Session.getInstance(p,
                    new javax.mail.Authenticator() {
                protected PasswordAuthentication getPasswordAuthentication() {
                    return new PasswordAuthentication(accountName, accountPassword);
                }
            });
            String from = "dhuyclone2001@gmail.com";
            String to = txtEmail.getText();
            String subject = "Mã xác nhận";
            String body = "Mã xác nhận của bạn là: " + String.valueOf(randomNumber);
            Message msg = new MimeMessage(s);
            msg.setFrom(new InternetAddress(from));
            msg.setRecipients(Message.RecipientType.TO, InternetAddress.parse(to));
            msg.setSubject(subject);
            msg.setText(body);
            Transport.send(msg);
            JOptionPane.showMessageDialog(null, "Mail was sent successfully", "Message",
                    javax.swing.JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Vui long nhap lai mail!");
            e.printStackTrace();
        }
    }

//    public boolean checkMa() {
//        if (txtMaXacNhan.getText().equals(String.valueOf(randomNumber))) {
//            System.out.println("true!");
//        } else {
//            System.out.println("false!");
//        }
//    }
    public boolean validateForm() {
        if (txtHoTen.getText().isBlank() && txtSDT.getText().isBlank() && txtDiaChi.getText().isBlank()
                && txtEmail.getText().isBlank() && txtUser.getText().isBlank() && txtPass.getText().isBlank() && txtMaXacNhan.getText().isBlank()) {
            JOptionPane.showMessageDialog(this, "Chưa có thông tin !");
            txtUser.requestFocus();
            return false;
        }
//        if (txtMaND.getText().trim().equals("")) {
//            JOptionPane.showMessageDialog(this, "Chưa điền mã người dùng !");
//            txtMaND.requestFocus();
//            return false;
//        }
        if (txtHoTen.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "Chưa điền tên người dùng !");
            txtHoTen.requestFocus();
            return false;
        }
        if (txtSDT.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "Chưa nhập số điện thoại!");
            txtSDT.requestFocus();
            return false;
        }
        if (txtDiaChi.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "Chưa nhập vào địa chỉ !");
            txtDiaChi.requestFocus();
            return false;
        }
        if (txtEmail.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "Chưa nhập email !");
            txtEmail.requestFocus();
            return false;
        }
//        if (txtMaTk.getText().trim().equals("")) {
//            JOptionPane.showMessageDialog(this, "Chưa nhập mã TK !");
//            txtMaTk.requestFocus();
//            return false;
//        }

        if (txtUser.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "Chưa nhập username !");
            txtUser.requestFocus();
            return false;
        }

        char[] passwordChars = txtPass.getPassword();
        String password = new String(passwordChars);
        if (password.trim().equals("")) {
            JOptionPane.showMessageDialog(this, "Chưa nhập password !");
            txtPass.requestFocus();
            return false;
        }
//        if (txtMaXacNhan.getText().trim().equals("")) {
//            JOptionPane.showMessageDialog(this, "Chưa nhập mã xác nhận !");
//            txtMaXacNhan.requestFocus();
//            return false;
//        }

        if (!txtMaXacNhan.getText().trim().equals(String.valueOf(randomNumber))) {
            JOptionPane.showMessageDialog(this, "Mã xác nhận sai !");
            txtMaXacNhan.requestFocus();
            return false;
        }
        if (txtMaXacNhan.getText().trim().equals("0")) {
            JOptionPane.showMessageDialog(this, "Mã xác nhận sai !");
            txtMaXacNhan.requestFocus();
            return false;
        }

        String sdt = "^0+\\d*[0-9]{9}$";
        String email = "^[A-Za-z0-9._%+]+@[A-Za-z0-9.]+\\.[A-Za-z]{2,}$";
        if (txtSDT.getText().matches(sdt) == false) {
            JOptionPane.showMessageDialog(this, "SĐT sai định dạng !");
            txtSDT.requestFocus();
            return false;

        }
        if (txtEmail.getText().matches(email) == false) {
            JOptionPane.showMessageDialog(this, "Email sai định dạng !");
            txtEmail.requestFocus();
            return false;
        }
        return true;
    }

    public boolean validateMaXN() {
        if (txtHoTen.getText().isBlank() && txtSDT.getText().isBlank() && txtDiaChi.getText().isBlank()
                && txtEmail.getText().isBlank() && txtUser.getText().isBlank() && txtPass.getText().isBlank() && txtMaXacNhan.getText().isBlank()) {
            JOptionPane.showMessageDialog(this, "Chưa có thông tin !");
            txtUser.requestFocus();
            return false;
        }
//        if (txtMaND.getText().trim().equals("")) {
//            JOptionPane.showMessageDialog(this, "Chưa điền mã người dùng !");
//            txtMaND.requestFocus();
//            return false;
//        }
        if (txtHoTen.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "Chưa điền tên người dùng !");
            txtHoTen.requestFocus();
            return false;
        }
        if (txtSDT.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "Chưa nhập số điện thoại!");
            txtSDT.requestFocus();
            return false;
        }
        if (txtDiaChi.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "Chưa nhập vào địa chỉ !");
            txtDiaChi.requestFocus();
            return false;
        }
        if (txtEmail.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "Chưa nhập email !");
            txtEmail.requestFocus();
            return false;
        }
//        if (txtMaTk.getText().trim().equals("")) {
//            JOptionPane.showMessageDialog(this, "Chưa nhập mã TK !");
//            txtMaTk.requestFocus();
//            return false;
//        }

        if (txtUser.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "Chưa nhập username !");
            txtUser.requestFocus();
            return false;
        }

        char[] passwordChars = txtPass.getPassword();
        String password = new String(passwordChars);
        if (password.trim().equals("")) {
            JOptionPane.showMessageDialog(this, "Chưa nhập password !");
            txtPass.requestFocus();
            return false;
        }
//        if (txtMaXacNhan.getText().trim().equals("")) {
//            JOptionPane.showMessageDialog(this, "Chưa nhập mã xác nhận !");
//            txtMaXacNhan.requestFocus();
//            return false;
//        }

//        if (!txtMaXacNhan.getText().trim().equals(String.valueOf(randomNumber))) {
//            JOptionPane.showMessageDialog(this, "Mã xác nhận sai !");
//            txtMaXacNhan.requestFocus();
//            return false;
//        }
        String sdt = "^0+\\d*[0-9]{9}$";
        String email = "^[A-Za-z0-9._%+]+@[A-Za-z0-9.]+\\.[A-Za-z]{2,}$";
        if (txtSDT.getText().matches(sdt) == false) {
            JOptionPane.showMessageDialog(this, "SĐT sai định dạng !");
            txtSDT.requestFocus();
            return false;

        }
        if (txtEmail.getText().matches(email) == false) {
            JOptionPane.showMessageDialog(this, "Email sai định dạng !");
            txtEmail.requestFocus();
            return false;
        }
        return true;
    }

    public void startCountDown() {
        btnGuiMa.setEnabled(false);
        remainingSeconds = 30; // 2 minutes in seconds
        timer = new Timer(1000, (ActionEvent e) -> {
            if (remainingSeconds > 0) {
                int minutes = remainingSeconds / 60;
                int seconds = remainingSeconds % 60;
                txtThoiGian.setText("Time remaining: " + String.format("%02d:%02d", minutes, seconds));
                remainingSeconds--;
            } else if (remainingSeconds == -1) {
                txtThoiGian.setText("Mã xác nhận có hiệu lực trong 30s");
                timer.stop();
                btnGuiMa.setEnabled(true);
            } else {
                txtThoiGian.setText("Mã xác nhận hết hiệu lục vui lòng ấn gửi lại");
                timer.stop();
                btnGuiMa.setEnabled(true);
            }
        });
        timer.start();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDangKi;
    private javax.swing.JButton btnGuiMa;
    private javax.swing.JButton btnReset;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField txtDiaChi;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtHoTen;
    private javax.swing.JTextField txtMaXacNhan;
    private javax.swing.JPasswordField txtPass;
    private javax.swing.JTextField txtSDT;
    private javax.swing.JLabel txtThoiGian;
    private javax.swing.JTextField txtUser;
    // End of variables declaration//GEN-END:variables

}
