/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mylibsys.libsystem.ui;

import com.mylibsys.libsystem.utils.DateTimeRanDomID;
import com.mylibsys.libsystem.dao.nguoiDungDao;
import com.mylibsys.libsystem.dao.phieuMuonDao;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import com.mylibsys.libsystem.entity.*;
import java.beans.PropertyChangeEvent;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author kuteb
 */
public class phieuMuonUI extends javax.swing.JPanel {

    lichSuXoaPMuon pMuonlsx = new lichSuXoaPMuon();

    private DefaultTableModel tblModel;
    static phieuMuonDao pmd = new phieuMuonDao();
    JFrame jf1 = new JFrame();
    JPanel jp = new phieuMuonChiTietUI();

    /**
     * Creates new form formMuon
     */
    public phieuMuonUI() {
        initComponents();
        inittables();
        fillDataTable();
        lblPM.requestFocus();
        txtTim.setText("Nhập Mã Phiếu Mượn Để Tìm");

    }

    public void addPropertyChangeListenerToForm2(JFrame form2) {
        form2.addPropertyChangeListener((PropertyChangeEvent evt) -> {
            if ("tableDataChanged".equals(evt.getPropertyName())) {
                tblModel.setRowCount(0);
                fillDataTable();
            }
        });
    }

    public void inittables() {
        tblModel = new DefaultTableModel();
        String[] colum = new String[]{"Mã Phiếu Mượn", "Mã Người Dùng", "Ngày Mượn", "Ngày Đến Hạn"};
        tblModel.setColumnIdentifiers(colum);
        tblPhieuMuon.setModel(tblModel);
    }
//    List<phieuMuon> list = new ArrayList<>();

    public void fillDataTable() {
//        list = new phieuMuonDao().selectBySql();
        for (phieuMuon pm : new phieuMuonDao().selectBySql()) {
            tblModel.addRow(new String[]{pm.getMaPM(), pm.getMaND(), pm.getNgayDenHan(), pm.getNgayMuon()});
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPhieuMuon = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        lblPM = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtMand = new javax.swing.JTextField();
        txtMaPm = new javax.swing.JTextField();
        btnThem = new javax.swing.JButton();
        btnDel = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        borderApp1 = new com.mylibsys.libsystem.ui.borderApp();
        btnTim = new javax.swing.JButton();
        txtTim = new javax.swing.JTextField();
        btnTraCuuPMCT = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        dateMuon = new com.toedter.calendar.JDateChooser();
        dateHan = new com.toedter.calendar.JDateChooser();
        jButton8 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(850, 550));

        tblPhieuMuon.setBackground(new java.awt.Color(0, 204, 204));
        tblPhieuMuon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblPhieuMuon.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tblPhieuMuon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblPhieuMuonMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblPhieuMuon);

        jLabel1.setText("Mã Phiếu Mượn :");

        lblPM.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblPM.setText("Phiếu Mượn");

        jLabel3.setText("Mã Người Dùng :");

        txtMaPm.setEnabled(false);

        btnThem.setBackground(new java.awt.Color(254, 231, 197));
        btnThem.setText("Thêm");
        buttonGroup1.add(btnThem);
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnDel.setBackground(new java.awt.Color(254, 231, 197));
        btnDel.setText("Xoá");
        buttonGroup1.add(btnDel);
        btnDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelActionPerformed(evt);
            }
        });

        btnUpdate.setBackground(new java.awt.Color(254, 231, 197));
        btnUpdate.setText("Update");
        buttonGroup1.add(btnUpdate);
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        borderApp1.setBackground(new java.awt.Color(0, 204, 204));

        btnTim.setBackground(new java.awt.Color(254, 231, 197));
        btnTim.setText("TÌm Kiếm");
        btnTim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimActionPerformed(evt);
            }
        });

        txtTim.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTimFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTimFocusLost(evt);
            }
        });

        javax.swing.GroupLayout borderApp1Layout = new javax.swing.GroupLayout(borderApp1);
        borderApp1.setLayout(borderApp1Layout);
        borderApp1Layout.setHorizontalGroup(
            borderApp1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, borderApp1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtTim, javax.swing.GroupLayout.DEFAULT_SIZE, 448, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnTim)
                .addContainerGap())
        );
        borderApp1Layout.setVerticalGroup(
            borderApp1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(borderApp1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(borderApp1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTim)
                    .addComponent(txtTim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnTraCuuPMCT.setBackground(new java.awt.Color(254, 231, 197));
        btnTraCuuPMCT.setText("Tra cứu CTPM");
        buttonGroup1.add(btnTraCuuPMCT);
        btnTraCuuPMCT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTraCuuPMCTActionPerformed(evt);
            }
        });

        jButton7.setBackground(new java.awt.Color(254, 231, 197));
        jButton7.setText("Reset");
        buttonGroup1.add(jButton7);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jLabel4.setText("Ngày Mượn :");

        jLabel5.setText("Ngày Đến Hạn: ");

        dateMuon.setDateFormatString("dd-MM-yyyy");

        dateHan.setDateFormatString("dd-MM-yyyy");

        jButton8.setBackground(new java.awt.Color(254, 231, 197));
        jButton8.setText("Lịch Sử Xoá");
        buttonGroup1.add(jButton8);
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(255, 153, 102));
        jButton1.setText("Tính ngày đến hạn");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(btnDel, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(btnTraCuuPMCT)
                        .addGap(37, 37, 37)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtMaPm, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMand, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(60, 60, 60)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4))
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(dateHan, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dateMuon, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(22, 22, 22))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 850, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(331, 331, 331)
                        .addComponent(lblPM))
                    .addComponent(borderApp1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblPM, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(borderApp1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtMaPm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel4))
                            .addComponent(dateMuon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtMand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel5)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(jButton1))))
                    .addComponent(dateHan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTraCuuPMCT, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 307, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tblPhieuMuonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPhieuMuonMousePressed
        int a = tblPhieuMuon.getSelectedRow();
        txtMaPm.setText((String) tblModel.getValueAt(a, 0));
        txtMand.setText((String) tblModel.getValueAt(a, 1));
        dateMuon.setDate(parseStringToDate((String) tblModel.getValueAt(a, 2)));
        dateHan.setDate(parseStringToDate((String) tblModel.getValueAt(a, 3)));

    }//GEN-LAST:event_tblPhieuMuonMousePressed

    private void btnTraCuuPMCTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTraCuuPMCTActionPerformed

        if (jf1 != null) {
            jf1.setSize(760, 480);
            jf1.add(jp);
            jf1.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            jf1.setResizable(false);
            jf1.setVisible(true);
        } else {

            jf1.setVisible(true);
        }
    }//GEN-LAST:event_btnTraCuuPMCTActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
//        if (checkTTND() == true) {
//            JOptionPane.showMessageDialog(this, "Đã tồn tại người dùng này");
//            return;
//        }
        if (validateRong() == true) {
            DateTimeRanDomID dt = new DateTimeRanDomID();

            phieuMuon pm = new phieuMuon();
            pm.setMaPM("PM" + dt.generateUniqueRandomCode());
            pm.setMaND(txtMand.getText());
            pm.setNgayDenHan(parseDate(dateHan.getDate()));
            pm.setNgayMuon(parseDate(dateMuon.getDate()));

            if (pmd.them(pm) == 1) {

                JOptionPane.showMessageDialog(this, "thêm thành công !");
            } else {
                JOptionPane.showMessageDialog(this, "thêm thất Bại !");
            }
            tblModel.setRowCount(0);
            fillDataTable();
            tblPhieuMuon.setModel(tblModel);
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        int a = tblPhieuMuon.getSelectedRow();
        JOptionPane.showMessageDialog(this, "Chỉ sửa được ngày mượn!");

        if (a == -1) {
            JOptionPane.showMessageDialog(this, "Bạn chưa chọn người dùng nào trong bảng !");
            return;
        }
        if (dateHan.getDate() == null || dateMuon.getDate() == null) {
            JOptionPane.showMessageDialog(this, "Chưa có ngày mượn !");
            return;
        }
        if (pmd.update(parseDate(dateMuon.getDate()), parseDate(dateHan.getDate()), txtMaPm.getText()) == 1) {
            JOptionPane.showMessageDialog(this, "Update thành công !");
        } else {
            JOptionPane.showMessageDialog(this, "Sửa thất bại");

        }
        tblModel.setRowCount(0);
        fillDataTable();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        txtMaPm.setText("");
        txtMand.setText("");
        dateHan.setDate(null);
        dateMuon.setDate(null);
        tblModel.setRowCount(0);
        fillDataTable();
    }//GEN-LAST:event_jButton7ActionPerformed
    public boolean check = false;
    private void btnDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelActionPerformed
        xoa();
    }//GEN-LAST:event_btnDelActionPerformed

    private void btnTimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimActionPerformed
        if ("".equals(txtTim.getText())) {
            JOptionPane.showMessageDialog(this, "ô tìm kiếm đang trống");
            return;
        }
        if (timKiem() != null) {
            JOptionPane.showMessageDialog(this, "Đã tìm thấy");
        } else {
            JOptionPane.showMessageDialog(this, "Không tồn tại");

        }

    }//GEN-LAST:event_btnTimActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        pMuonlsx.setVisible(true);
        addPropertyChangeListenerToForm2(pMuonlsx);
        pMuonlsx.setDefaultCloseOperation(pMuonlsx.DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (dateHan.getDate() == null) {
            JOptionPane.showMessageDialog(this, "Chưa có ngày mượn !");
            return;
        }
        dateHan.setDate(parseStringToDate(pmd.tinhNgay(parseDate(dateMuon.getDate()))));
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtTimFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTimFocusGained
        if (txtTim.getText().equals("") || txtTim.getText().equals("Nhập Mã Phiếu Mượn Để Tìm")) {
            txtTim.setText("");

        }
    }//GEN-LAST:event_txtTimFocusGained

    private void txtTimFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTimFocusLost
        if (txtTim.getText().equals("")) {
            txtTim.setText("Nhập Mã Phiếu Mượn Để Tìm");

        }
    }//GEN-LAST:event_txtTimFocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.mylibsys.libsystem.ui.borderApp borderApp1;
    private javax.swing.JButton btnDel;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTim;
    private javax.swing.JButton btnTraCuuPMCT;
    private javax.swing.JButton btnUpdate;
    private javax.swing.ButtonGroup buttonGroup1;
    private com.toedter.calendar.JDateChooser dateHan;
    private com.toedter.calendar.JDateChooser dateMuon;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblPM;
    private javax.swing.JTable tblPhieuMuon;
    private javax.swing.JTextField txtMaPm;
    private javax.swing.JTextField txtMand;
    private javax.swing.JTextField txtTim;
    // End of variables declaration//GEN-END:variables
public boolean validateRong() {
        String regexMa = "PM\\d+";

        if ("".equals(txtMaPm.getText())) {
            JOptionPane.showMessageDialog(this, "Không được để trống mã Phiếu mượn");
            return false;
        }
        if ("".equals(txtMand.getText())) {
            JOptionPane.showMessageDialog(this, "Không được để trống mã Người Dùng");
            return false;
        }
        phieuMuon foundPhieuMuon = tim();

        if (txtMaPm.getText().matches(regexMa) == false) {
            JOptionPane.showMessageDialog(this, "Mã PMCT có dạng: PM01(PM+số)");
            return false;
        }
        return true;
    }

    public void xoa() {
        if ("".equals(txtMaPm.getText())) {
            JOptionPane.showMessageDialog(this, "Mã phiếu mượn đang trống");
            return;
        }
        if (tim() != null) {
            if (pmd.del(tim().getMaPM()) == false) {
                JOptionPane.showMessageDialog(this, "Đã có PMCT với mã Phiếu mượn này");

            } else {
                JOptionPane.showMessageDialog(this, "Xoá thành công");
                tblModel.setRowCount(0);
                fillDataTable();

            }

        } else {
            JOptionPane.showMessageDialog(this, "Không tồn tại");

        }
    }

    public phieuMuon tim() {
        try {
            for (phieuMuon phieuMuon1 : pmd.selectBySql()) {
                if (phieuMuon1.getMaPM().equalsIgnoreCase(txtMaPm.getText())) {
                    return phieuMuon1;
                }
            }
        } catch (Exception e) {

        }
        return null;

    }

    public phieuMuon timKiem() {
        for (phieuMuon phieuMuon1 : pmd.selectBySql()) {
            if (phieuMuon1.getMaPM().equalsIgnoreCase(txtTim.getText())) {
                txtMaPm.setText(phieuMuon1.getMaPM());
                txtMand.setText(phieuMuon1.getMaND());
                dateMuon.setDate(parseStringToDate(phieuMuon1.getNgayDenHan()));
                dateHan.setDate(parseStringToDate(phieuMuon1.getNgayMuon()));

                return phieuMuon1;
            }
        }
        return null;
    }

    public boolean checkTTND() {
        nguoiDungDao nd2 = new nguoiDungDao();
        for (NguoiDung nd1 : nd2.getAllND()) {
            if (nd1.getMaND().equals(txtMand.getText())) {
                return true;
            }
        }

        return false;
    }

    public Date parseStringToDate(String dateString) {
        SimpleDateFormat formatter = new SimpleDateFormat("dd-MM-yyyy");
        try {
            Date date = formatter.parse(dateString);
            return date;
        } catch (ParseException e) {
            return null;
        }
    }

    public String parseDate(Date selectedDate) {
//        Date selectedDate = dateTra.getDate();
        String formattedDate = null;
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        try {
            formattedDate = dateFormat.format(selectedDate);
        } catch (Exception e) {
        }
        return formattedDate;
    }
}
