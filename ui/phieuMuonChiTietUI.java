/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mylibsys.libsystem.ui;

import com.mylibsys.libsystem.dao.phieuMuonCTDao;
import com.mylibsys.libsystem.utils.DateTimeRanDomID;
import com.mylibsys.libsystem.dao.phieuMuonDao;
import com.mylibsys.libsystem.dao.phieuTraDao;
import com.mylibsys.libsystem.entity.phieuMuon;
import com.mylibsys.libsystem.entity.phieuMuonChiTiet;
import static com.mylibsys.libsystem.utils.dateFormart.formatDate;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.Date;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.xwpf.usermodel.XWPFDocument;
import org.apache.poi.xwpf.usermodel.XWPFParagraph;
import org.apache.poi.xwpf.usermodel.XWPFRun;
import javax.swing.JFileChooser;
import org.checkerframework.checker.units.qual.A;

/**
 *
 * @author kuteb
 */
public class phieuMuonChiTietUI extends javax.swing.JPanel {

    lichSuXoaPmct pmctLsx = new lichSuXoaPmct();
    phieuMuonChiTiet pmct = new phieuMuonChiTiet();

    boolean sua = false;
    boolean checkSua = false;
    boolean checkTinhNgay = false;
    private DefaultTableModel tblModel;
    phieuMuonCTDao pmctdao = new phieuMuonCTDao();
//private static String ma1;

    /**
     * Creates new form phieuMuonCT
     */
    public phieuMuonChiTietUI() {
        initComponents();
        inittables();
        fillDataTable();
        maPhieu();
        lblPmct.requestFocus();
        txtTim.setText("Nhập Mã Phiếu Mượn Chi Tiết Để Tìm");

    }

    public void inittables() {
        tblModel = new DefaultTableModel();
        String[] colum = new String[]{"Mã PMCT", "Mã Phiếu Mượn", "Mã Sách", "Số Lượng", "Tình Trạng"};
        tblModel.setColumnIdentifiers(colum);
        tblPMCT.setModel(tblModel);

    }
//    List<phieuMuon> list = new ArrayList<>();

    public void fillDataTable() {
//        list = new phieuMuonDao().selectBySql();
        for (phieuMuonChiTiet pmct : new phieuMuonCTDao().selectBySql()) {
            tblModel.addRow(new String[]{pmct.getMaPmct(), pmct.getMaPM(), pmct.getMaSach(), String.valueOf(pmct.getSoLuong()), pmct.getTinhTrang()});
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnTim = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPMCT = new javax.swing.JTable();
        lblPmct = new javax.swing.JLabel();
        txtSoLuong = new javax.swing.JTextField();
        txtMaPmct = new javax.swing.JTextField();
        txtMaSach = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        cbbChonPhieu = new javax.swing.JComboBox<>();
        txtTim = new javax.swing.JTextField();
        btnPanelLS = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        panelShow = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtTinhTrang = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        btnSua1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 204, 204));
        setMaximumSize(new java.awt.Dimension(737, 450));
        setMinimumSize(new java.awt.Dimension(737, 450));
        setPreferredSize(new java.awt.Dimension(737, 450));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnTim.setBackground(new java.awt.Color(254, 231, 197));
        btnTim.setText("Tìm");
        btnTim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimActionPerformed(evt);
            }
        });
        add(btnTim, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 50, -1, -1));

        tblPMCT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblPMCT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblPMCTMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblPMCT);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 330, 749, 180));

        lblPmct.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        lblPmct.setText("Phiếu Mượn Chi Tiết");
        add(lblPmct, new org.netbeans.lib.awtextra.AbsoluteConstraints(301, 16, -1, -1));
        add(txtSoLuong, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 210, 391, -1));

        txtMaPmct.setEnabled(false);
        add(txtMaPmct, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 90, 390, -1));
        add(txtMaSach, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 170, 390, -1));

        jLabel2.setText("Mã Phiếu Mượn  :");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 130, 120, -1));

        jLabel5.setText("Mã Sách  :");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 170, 80, -1));

        jLabel8.setText("Số Lượng   :");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 210, 90, 20));

        btnThem.setBackground(new java.awt.Color(254, 231, 197));
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        add(btnThem, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 58, 120, -1));

        btnSua.setBackground(new java.awt.Color(254, 231, 197));
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });
        add(btnSua, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, 120, -1));

        btnReset.setBackground(new java.awt.Color(254, 231, 197));
        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });
        add(btnReset, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, 120, -1));

        cbbChonPhieu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chọn Phiếu" }));
        add(cbbChonPhieu, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 130, 390, -1));

        txtTim.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTimFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTimFocusLost(evt);
            }
        });
        add(txtTim, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 50, 310, -1));

        btnPanelLS.setBackground(new java.awt.Color(254, 231, 197));
        btnPanelLS.setText("LỊch sử xoá");
        btnPanelLS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPanelLSActionPerformed(evt);
            }
        });
        add(btnPanelLS, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 220, 120, -1));

        btnXoa.setBackground(new java.awt.Color(254, 231, 197));
        btnXoa.setText("Xoá");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        add(btnXoa, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 260, 120, -1));

        panelShow.setBackground(new java.awt.Color(0, 204, 204));
        add(panelShow, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, 70, 40));

        jLabel3.setText(" Tình Trạng     :");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(225, 250, 100, -1));

        txtTinhTrang.setColumns(20);
        txtTinhTrang.setRows(5);
        jScrollPane2.setViewportView(txtTinhTrang);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 250, 390, 60));

        jLabel1.setText("Mã PMCT Theo Bảng   :");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 90, 150, -1));

        btnSua1.setBackground(new java.awt.Color(254, 231, 197));
        btnSua1.setText("In Phiếu MCT");
        btnSua1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSua1ActionPerformed(evt);
            }
        });
        add(btnSua1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 120, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnTimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimActionPerformed
        if (txtTim.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Bạn đang để trống ô tìm kiếm");
            return;
        }
        if (timKiem() == null) {
            JOptionPane.showMessageDialog(this, "Không tồn tại mã này !");

        }
    }//GEN-LAST:event_btnTimActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed

        try {
            them();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        txtMaSach.setText("");
        txtMaPmct.setText("");
        cbbChonPhieu.setSelectedIndex(0);
        txtSoLuong.setText("");
        tblModel.setRowCount(0);
        fillDataTable();
        updateUI();
    }//GEN-LAST:event_btnResetActionPerformed

    private void tblPMCTMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPMCTMousePressed
        int a = tblPMCT.getSelectedRow();
        txtMaPmct.setText((String) tblModel.getValueAt(a, 0));
        cbbChonPhieu.setSelectedItem(tblModel.getValueAt(a, 1));
        txtMaSach.setText((String) tblModel.getValueAt(a, 2));
        txtSoLuong.setText((String) tblModel.getValueAt(a, 3));
        txtTinhTrang.setText((String) tblModel.getValueAt(a, 4));
        updateUI();

    }//GEN-LAST:event_tblPMCTMousePressed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        sua();
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        xoa();
        tblModel.setNumRows(0);
        fillDataTable();
//        pmctdao.setSoLuongSachGiam(txtMaPmct.getText());
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnPanelLSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPanelLSActionPerformed

        pmctLsx.setVisible(true);
        pmctLsx.setDefaultCloseOperation(pmctLsx.DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_btnPanelLSActionPerformed

    private void txtTimFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTimFocusGained
        if (txtTim.getText().equals("") || txtTim.getText().equals("Nhập Mã Phiếu Mượn Chi Tiết Để Tìm")) {
            txtTim.setText("");

        }
    }//GEN-LAST:event_txtTimFocusGained

    private void txtTimFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTimFocusLost
        if (txtTim.getText().equals("")) {
            txtTim.setText("Nhập Mã Phiếu Mượn Chi Tiết Để Tìm");

        }
    }//GEN-LAST:event_txtTimFocusLost

    private void btnSua1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSua1ActionPerformed
        inHD();
    }//GEN-LAST:event_btnSua1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPanelLS;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnSua1;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTim;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cbbChonPhieu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblPmct;
    private javax.swing.JPanel panelShow;
    private javax.swing.JTable tblPMCT;
    private javax.swing.JTextField txtMaPmct;
    private javax.swing.JTextField txtMaSach;
    private javax.swing.JTextField txtSoLuong;
    private javax.swing.JTextField txtTim;
    private javax.swing.JTextArea txtTinhTrang;
    // End of variables declaration//GEN-END:variables

    public void maPhieu() {
        for (phieuMuon pm : new phieuMuonDao().selectBySql()) {
            cbbChonPhieu.addItem(pm.getMaPM());
        }

    }

    public phieuMuonChiTiet tim() {
        for (phieuMuonChiTiet pmct : new phieuMuonCTDao().selectBySql()) {
            if (pmct.getMaPmct().equalsIgnoreCase(txtMaPmct.getText())) {

                return pmct;
            }
//            cbbChonPhieu.addItem(pm.getMaPM());
        }
        return null;
    }

    public phieuMuonChiTiet timKiem() {
        for (phieuMuonChiTiet pmct : new phieuMuonCTDao().selectBySql()) {
            if (pmct.getMaPmct().equalsIgnoreCase(txtTim.getText())) {
                cbbChonPhieu.setSelectedItem(pmct.getMaPM());
                txtMaSach.setText(pmct.getMaSach());
                txtSoLuong.setText(String.valueOf(pmct.getSoLuong()));
                txtMaPmct.setText(pmct.getMaPmct());
                txtTinhTrang.setText(pmct.getTinhTrang());
                JOptionPane.showMessageDialog(this, "Đã tìm thấy!");
                return pmct;
            }
        }
        return null;
    }

    public Date parseStringToDate(String dateString) {
        SimpleDateFormat formatter = new SimpleDateFormat("dd-MM-yyyy");
        try {
            Date date = formatter.parse(dateString);
            return date;
        } catch (ParseException e) {
//            System.out.println("ParseException: " + e.getMessage());
            return null;
        }
    }

    public boolean validateThem() {

        if (cbbChonPhieu.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(this, "Chọn mã phiếu mượn");
            return false;
        }
        try {
            Integer.valueOf(txtSoLuong.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Số Lượng là số !");
            return false;
        }

        if (Integer.parseInt(txtSoLuong.getText()) > 1 || Integer.parseInt(txtSoLuong.getText()) < 1) {
            JOptionPane.showMessageDialog(this, "Bạn chỉ được mượn 1 quyển với 1 PMCT");
            return false;
        }

        if (pmctdao.geSlSach(txtMaSach.getText()) - Integer.parseInt(txtSoLuong.getText()) < 0) {
            JOptionPane.showMessageDialog(this, "Đã hết sách này");
            return false;

        }

        return true;
    }

    public void them() {
        if (pmctdao.geSlSach(txtMaSach.getText()) < 0) {
            JOptionPane.showMessageDialog(this, "Đã hết sách này!");
            return;
        }
        DateTimeRanDomID dt = new DateTimeRanDomID();

        try {
            pmct.setMaPM((String) cbbChonPhieu.getSelectedItem());
            pmct.setMaPmct(dt.generateUniqueRandomCode());
            pmct.setMaSach(txtMaSach.getText());
            pmct.setSoLuong(Integer.parseInt(txtSoLuong.getText()));
            pmct.setTinhTrang(txtTinhTrang.getText());
            pmctdao.setSoLuongSachTang(txtMaPmct.getText());
            if (pmctdao.them(pmct) == true) {
                JOptionPane.showMessageDialog(this, "Thêm thành công !");
                pmctdao.setSoLuongSachGiam(txtMaSach.getText());
                tblModel.setRowCount(0);
                fillDataTable();
            } else {
                JOptionPane.showMessageDialog(this, "Thêm thất bại !");
            }
        } catch (Exception e) {
        }

    }

    public void xoa() {
        pmctdao.xoa(txtMaPmct.getText());
        JOptionPane.showMessageDialog(this, "Xoá thành công !");

    }

    public boolean sua() {
        int a = tblPMCT.getSelectedRow();
        if (a == -1) {
            JOptionPane.showMessageDialog(panelShow, "Bạn chưa chọn phiếu cần sửa !");
            return false;
        }
        if (Integer.parseInt(txtSoLuong.getText()) > 1) {
            JOptionPane.showMessageDialog(panelShow, "Chỉ được mượn 1 cuốn trên 1 mã PMCT !");
            return false;

        }
        boolean check = false;
        int option = JOptionPane.showOptionDialog(panelShow, "Chỉ sửa số lượng, mã sách, tình trạng với pmct chưa có ptra", "Thông báo", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);

        if (option == JOptionPane.YES_OPTION) {
            // Lựa chọn YES
            // Thực hiện hành động khi người dùng chọn YES

            if (pmctdao.update(txtMaPmct.getText(), Integer.parseInt(txtSoLuong.getText()), txtTinhTrang.getText(), txtMaSach.getText()) == true) {
                JOptionPane.showMessageDialog(panelShow, "update thành công");
                check = true;
                tblModel.setRowCount(0);
                fillDataTable();

            } else {
                JOptionPane.showMessageDialog(panelShow, "Không tồn tại mã sách, hoặc đã có phiếu trả cho PMCT này");

            }

        } else {
            JOptionPane.showMessageDialog(panelShow, "Đã Huỷ Update");

        }

        if (check == false) {
            JOptionPane.showMessageDialog(panelShow, "Không tồn tại!");
            check = false;

        }
        return check;
    }

    public String parseDate(Date selectedDate) {
        String formattedDate = null;
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        try {
            formattedDate = dateFormat.format(selectedDate);
        } catch (Exception e) {
        }
        return formattedDate;
    }

    public String parseDateY(Date selectedDate) {
        String formattedDate = null;
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        try {
            formattedDate = dateFormat.format(selectedDate);
        } catch (Exception e) {
        }
        return formattedDate;
    }

    public void inHD() {
        String a=null;
        String b=null;
        String c = txtMaPmct.getText()+" "+LocalDate.now().toString();
        System.out.println("c la"+c);
        
        try {
                 a= formatDate(pmctdao.getDateIn((String) cbbChonPhieu.getSelectedItem()).get(0));
                 b=formatDate(pmctdao.getDateIn((String) cbbChonPhieu.getSelectedItem()).get(1));
        } catch (Exception e) {
        }
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int userSelection = fileChooser.showDialog(panelShow, "Lưu");
        String fileName = JOptionPane.showInputDialog(panelShow, "Tên File");
        if (userSelection == JFileChooser.APPROVE_OPTION) {
            File fileToSave = fileChooser.getSelectedFile();
            String filePath = fileToSave.getAbsolutePath();
            try {
                String filePath1 = System.getProperty("user.dir") + "/src/main/resources/HDMAU.docx";
                FileInputStream file = new FileInputStream(new File(filePath1));
                try ( XWPFDocument document = new XWPFDocument(file)) {
                    // Tìm và thay thế giá trị trong tài liệu
                    for (XWPFParagraph p : document.getParagraphs()) {
                        List<XWPFRun> runs = p.getRuns();
                        if (runs != null) {
                            for (XWPFRun r : runs) {
                                String text = r.getText(0);
                                if (text != null && text.contains("Name")) {
                                    text = text.replace("Name", pmctdao.gettenNDIn((String) cbbChonPhieu.getSelectedItem()));
                                    r.setText(text, 0);
                                }
                                if (text != null && text.contains("xuat")) {
                                    text = text.replace("xuat", c);
                                    r.setText(text, 0);
                                }
                                if (text != null && text.contains("Sach")) {
                                    text = text.replace("Sach", pmctdao.gettenSach(txtMaSach.getText()));
                                    r.setText(text, 0);
                                }
                                if (text != null && text.contains("sl")) {
                                    text = text.replace("sl", txtSoLuong.getText());
                                    r.setText(text, 0);
                                }
                                if (text != null && text.contains("dateMuon")) {
                                    text = text.replace("dateMuon", a);
                                    r.setText(text, 0);
                                }
                                if (text != null && text.contains("dateHan")) {
                                    text = text.replace("dateHan", b);
                                    r.setText(text, 0);
                                }
                                if (text != null && text.contains("Tong")) {
                                    text = text.replace("Tong", "1");
                                    r.setText(text, 0);
                                }

                            }
                        }
                    }

                    try ( FileOutputStream out = new FileOutputStream(new File(filePath + "\\" + fileName + ".docx"))) {
                        document.write(out);
                        out.flush();
                    }
                }
            } catch (Exception ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this, "in thất bại!");
            }
        }

    }
}
